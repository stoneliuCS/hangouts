// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"io"

	"github.com/go-faster/errors"
)

func (s *ErrRespStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Error Schema.
type APIV1UserPostBadRequest struct {
	Error string `json:"error"`
}

// GetError returns the value of Error.
func (s *APIV1UserPostBadRequest) GetError() string {
	return s.Error
}

// SetError sets the value of Error.
func (s *APIV1UserPostBadRequest) SetError(val string) {
	s.Error = val
}

func (*APIV1UserPostBadRequest) aPIV1UserPostRes() {}

type APIV1UserPostCreated struct {
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Username  string `json:"username"`
	Age       int    `json:"age"`
	// Unique identifier.
	ID string `json:"id"`
}

// GetFirstName returns the value of FirstName.
func (s *APIV1UserPostCreated) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *APIV1UserPostCreated) GetLastName() string {
	return s.LastName
}

// GetUsername returns the value of Username.
func (s *APIV1UserPostCreated) GetUsername() string {
	return s.Username
}

// GetAge returns the value of Age.
func (s *APIV1UserPostCreated) GetAge() int {
	return s.Age
}

// GetID returns the value of ID.
func (s *APIV1UserPostCreated) GetID() string {
	return s.ID
}

// SetFirstName sets the value of FirstName.
func (s *APIV1UserPostCreated) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *APIV1UserPostCreated) SetLastName(val string) {
	s.LastName = val
}

// SetUsername sets the value of Username.
func (s *APIV1UserPostCreated) SetUsername(val string) {
	s.Username = val
}

// SetAge sets the value of Age.
func (s *APIV1UserPostCreated) SetAge(val int) {
	s.Age = val
}

// SetID sets the value of ID.
func (s *APIV1UserPostCreated) SetID(val string) {
	s.ID = val
}

func (*APIV1UserPostCreated) aPIV1UserPostRes() {}

// User schema represents a user in Hangouts.
type APIV1UserPostReq struct {
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Username  string `json:"username"`
	Age       int    `json:"age"`
}

// GetFirstName returns the value of FirstName.
func (s *APIV1UserPostReq) GetFirstName() string {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *APIV1UserPostReq) GetLastName() string {
	return s.LastName
}

// GetUsername returns the value of Username.
func (s *APIV1UserPostReq) GetUsername() string {
	return s.Username
}

// GetAge returns the value of Age.
func (s *APIV1UserPostReq) GetAge() int {
	return s.Age
}

// SetFirstName sets the value of FirstName.
func (s *APIV1UserPostReq) SetFirstName(val string) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *APIV1UserPostReq) SetLastName(val string) {
	s.LastName = val
}

// SetUsername sets the value of Username.
func (s *APIV1UserPostReq) SetUsername(val string) {
	s.Username = val
}

// SetAge sets the value of Age.
func (s *APIV1UserPostReq) SetAge(val int) {
	s.Age = val
}

// Error Schema.
type ErrResp struct {
	Error string `json:"error"`
}

// GetError returns the value of Error.
func (s *ErrResp) GetError() string {
	return s.Error
}

// SetError sets the value of Error.
func (s *ErrResp) SetError(val string) {
	s.Error = val
}

// ErrRespStatusCode wraps ErrResp with StatusCode.
type ErrRespStatusCode struct {
	StatusCode int
	Response   ErrResp
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrRespStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrRespStatusCode) GetResponse() ErrResp {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrRespStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrRespStatusCode) SetResponse(val ErrResp) {
	s.Response = val
}

type GetOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s GetOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

type HealthcheckGetOK struct {
	Message OptHealthcheckGetOKMessage `json:"message"`
}

// GetMessage returns the value of Message.
func (s *HealthcheckGetOK) GetMessage() OptHealthcheckGetOKMessage {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *HealthcheckGetOK) SetMessage(val OptHealthcheckGetOKMessage) {
	s.Message = val
}

type HealthcheckGetOKMessage string

const (
	HealthcheckGetOKMessageOK HealthcheckGetOKMessage = "OK"
)

// AllValues returns all HealthcheckGetOKMessage values.
func (HealthcheckGetOKMessage) AllValues() []HealthcheckGetOKMessage {
	return []HealthcheckGetOKMessage{
		HealthcheckGetOKMessageOK,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s HealthcheckGetOKMessage) MarshalText() ([]byte, error) {
	switch s {
	case HealthcheckGetOKMessageOK:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *HealthcheckGetOKMessage) UnmarshalText(data []byte) error {
	switch HealthcheckGetOKMessage(data) {
	case HealthcheckGetOKMessageOK:
		*s = HealthcheckGetOKMessageOK
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// NewOptAPIV1UserPostReq returns new OptAPIV1UserPostReq with value set to v.
func NewOptAPIV1UserPostReq(v APIV1UserPostReq) OptAPIV1UserPostReq {
	return OptAPIV1UserPostReq{
		Value: v,
		Set:   true,
	}
}

// OptAPIV1UserPostReq is optional APIV1UserPostReq.
type OptAPIV1UserPostReq struct {
	Value APIV1UserPostReq
	Set   bool
}

// IsSet returns true if OptAPIV1UserPostReq was set.
func (o OptAPIV1UserPostReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAPIV1UserPostReq) Reset() {
	var v APIV1UserPostReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAPIV1UserPostReq) SetTo(v APIV1UserPostReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAPIV1UserPostReq) Get() (v APIV1UserPostReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAPIV1UserPostReq) Or(d APIV1UserPostReq) APIV1UserPostReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptHealthcheckGetOKMessage returns new OptHealthcheckGetOKMessage with value set to v.
func NewOptHealthcheckGetOKMessage(v HealthcheckGetOKMessage) OptHealthcheckGetOKMessage {
	return OptHealthcheckGetOKMessage{
		Value: v,
		Set:   true,
	}
}

// OptHealthcheckGetOKMessage is optional HealthcheckGetOKMessage.
type OptHealthcheckGetOKMessage struct {
	Value HealthcheckGetOKMessage
	Set   bool
}

// IsSet returns true if OptHealthcheckGetOKMessage was set.
func (o OptHealthcheckGetOKMessage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHealthcheckGetOKMessage) Reset() {
	var v HealthcheckGetOKMessage
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHealthcheckGetOKMessage) SetTo(v HealthcheckGetOKMessage) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHealthcheckGetOKMessage) Get() (v HealthcheckGetOKMessage, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHealthcheckGetOKMessage) Or(d HealthcheckGetOKMessage) HealthcheckGetOKMessage {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
